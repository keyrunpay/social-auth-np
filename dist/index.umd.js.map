{"version":3,"file":"index.umd.js","sources":["../utils/clientOauthOptionHelper.js","../index.js","../methods/getOauthUrl.js","../utils/oauthUrlHelper.js","../methods/getClientSideOauthOption.js","../methods/parseUrl.js","../methods/getAccessToken.js","../methods/getUserInfo.js"],"sourcesContent":["const facebook_options = {\r\n  client_id: \"YOUR_CLIENT_ID\",\r\n  redirect_uri: \"YOUR_REDIRECT_URL\",\r\n  scope: \"email\",\r\n  response_type: \"code\",\r\n};\r\n\r\nconst google_options = {\r\n  client_id: \"YOUR_CLIENT_ID\",\r\n  redirect_uri: \"YOUR_REDIRECT_URL\",\r\n  scope: \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile\",\r\n  response_type: \"code\",\r\n  access_type: \"offline\",\r\n  prompt: \"consent\",\r\n};\r\n\r\nconst github_option = {\r\n  client_id: \"YOUR_CLIENT_ID\",\r\n  redirect_uri: \"YOUR_REDIRECT_URL\",\r\n  scope: \"read:user user:email\",\r\n  allow_signup: true,\r\n};\r\n\r\nconst linked_in_option = {\r\n  client_id: \"YOUR_CLIENT_ID\",\r\n  redirect_uri: \"YOUR_REDIRECT_URL\",\r\n  scope: \"r_liteprofile r_emailaddress w_member_social\",\r\n  response_type: \"code\",\r\n};\r\n\r\nexport { facebook_options, google_options, github_option, linked_in_option };\r\n","import getOauthUrl from \"./methods/getOauthUrl\";\r\nimport getClientSideOauthOption from \"./methods/getClientSideOauthOption\";\r\nimport parseUrl from \"./methods/parseUrl\";\r\nimport getAccessToken from \"./methods/getAccessToken\";\r\nimport getUserInfo from \"./methods/getUserInfo\";\r\n\r\nconst socialAuthNp = { getOauthUrl, getClientSideOauthOption, parseUrl, getAccessToken, getUserInfo };\r\n\r\nexport default socialAuthNp;\r\n","import { getGoogleOauthUrl, getGithubOauthUrl, getFacebookOauthUrl, getLinkedInOauthUrl } from \"../utils/oauthUrlHelper\";\r\n\r\nfunction getOauthUrl(platform, options) {\r\n  if (typeof platform !== \"string\") platform = \"buggged\";\r\n  platform = platform.toLowerCase();\r\n  switch (platform) {\r\n    case \"facebook\":\r\n      return getFacebookOauthUrl(options);\r\n    case \"google\":\r\n      return getGoogleOauthUrl(options);\r\n    case \"github\":\r\n      return getGithubOauthUrl(options);\r\n    case \"linkedin\":\r\n      return getLinkedInOauthUrl(options);\r\n    default:\r\n      return \"https://buggged.com\";\r\n  }\r\n}\r\n\r\nexport default getOauthUrl;\r\n","import queryString from \"query-string\";\r\nconst facebook_oauth_url = \"https://www.facebook.com/dialog/oauth\";\r\nconst google_oauth_url = \"https://accounts.google.com/o/oauth2/v2/auth\";\r\nconst github_oauth_url = \"https://github.com/login/oauth/authorize\";\r\nconst linked_in_oauth_url = \"https://www.linkedin.com/oauth/v2/authorization\";\r\n\r\nfunction getGoogleOauthUrl(options) {\r\n  const stringifiedParams = queryString.stringify(options);\r\n  return `${google_oauth_url}?${stringifiedParams}`;\r\n}\r\n\r\nfunction getFacebookOauthUrl(options) {\r\n  const stringifiedParams = queryString.stringify(options);\r\n  return `${facebook_oauth_url}?${stringifiedParams}`;\r\n}\r\n\r\nfunction getGithubOauthUrl(options) {\r\n  const stringifiedParams = queryString.stringify(options);\r\n  return `${github_oauth_url}?${stringifiedParams}`;\r\n}\r\n\r\nfunction getLinkedInOauthUrl(options) {\r\n  const stringifiedParams = queryString.stringify(options);\r\n  return `${linked_in_oauth_url}?${stringifiedParams}`;\r\n}\r\n\r\nexport { getGoogleOauthUrl, getGithubOauthUrl, getFacebookOauthUrl, getLinkedInOauthUrl };\r\n","import { google_options, facebook_options, github_option, linked_in_option } from \"../utils/clientOauthOptionHelper\";\r\n\r\nfunction getClientSideOauthOption(platform) {\r\n  if (typeof platform !== \"string\") return facebook_options;\r\n  platform = platform.toLowerCase();\r\n  switch (platform) {\r\n    case \"facebook\":\r\n      return facebook_options;\r\n    case \"google\":\r\n      return google_options;\r\n    case \"github\":\r\n      return github_option;\r\n    case \"linkedin\":\r\n      return linked_in_option;\r\n    default:\r\n      return facebook_options;\r\n  }\r\n}\r\n\r\nexport default getClientSideOauthOption;\r\n","import queryString from \"query-string\";\r\n\r\nfunction parseUrl(url) {\r\n  const parsedQuery = queryString.parse(url);\r\n  return parsedQuery;\r\n}\r\n\r\nexport default parseUrl;\r\n","import axios from \"axios\";\r\n\r\nfunction getFacebookAccessToken(params) {\r\n  return axios({\r\n    url: \"https://graph.facebook.com/oauth/access_token\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n\r\nfunction getGoogleAccessToken(params) {\r\n  return axios({\r\n    url: `https://oauth2.googleapis.com/token`,\r\n    method: \"post\",\r\n    data: { grant_type: \"authorization_code\", ...params },\r\n  });\r\n}\r\n\r\nfunction getLinkedinAccessToken(params) {\r\n  return axios({\r\n    url: `https://www.linkedin.com/oauth/v2/accessToken`,\r\n    method: \"post\",\r\n    data: { grant_type: \"authorization_code\", ...params },\r\n  });\r\n}\r\n\r\nfunction getGithubAccessToken(params) {\r\n  return axios({\r\n    url: \"https://github.com/login/oauth/access_token\",\r\n    method: \"get\",\r\n    params,\r\n  });\r\n}\r\n\r\nfunction getAccessToken(platform, params) {\r\n  if (typeof platform !== \"string\") throw \"Platform must be a string\";\r\n  platform = platform.toLowerCase();\r\n  switch (platform) {\r\n    case \"facebook\":\r\n      return getFacebookAccessToken(params);\r\n    case \"google\":\r\n      return getGoogleAccessToken(params);\r\n    case \"github\":\r\n      return getGithubAccessToken(params);\r\n    case \"linkedin\":\r\n      return getLinkedinAccessToken(params);\r\n    default:\r\n      throw \"Platform value not supported\";\r\n  }\r\n}\r\n\r\nexport default getAccessToken;\r\n\r\n/*\r\nParams Body \r\n{\r\n  client_id: process.env.APP_ID_GOES_HERE,\r\n  client_secret: process.env.APP_SECRET_GOES_HERE,\r\n  redirect_uri: \"https://www.example.com/authenticate/facebook/\",\r\n  code,\r\n}\r\n*/\r\n","import axios from \"axios\";\r\n\r\nfunction getGitHubUserData(access_token) {\r\n  return axios({\r\n    url: \"https://api.github.com/user\",\r\n    method: \"get\",\r\n    headers: {\r\n      Authorization: \"token \" + access_token,\r\n    },\r\n  });\r\n}\r\n\r\nfunction getFacebookUserData(access_token, fields) {\r\n  return axios({\r\n    url: \"https://graph.facebook.com/me\",\r\n    method: \"get\",\r\n    params: {\r\n      fields: fields ? fields : \"id,email,first_name,last_name\",\r\n      access_token,\r\n    },\r\n  });\r\n}\r\n\r\nfunction getGoogleUserData(access_token) {\r\n  return axios({\r\n    url: \"https://www.googleapis.com/oauth2/v2/userinfo\",\r\n    method: \"get\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + access_token,\r\n    },\r\n  });\r\n}\r\n\r\nfunction getLinkedinUserData(access_token) {\r\n  return axios({\r\n    url: \"https://api.linkedin.com/v2/me\",\r\n    method: \"get\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + access_token,\r\n    },\r\n  });\r\n}\r\n\r\nfunction getUserData(platform, access_token, params = false) {\r\n  if (typeof platform !== \"string\") throw \"Platform must be a string\";\r\n  platform = platform.toLowerCase();\r\n  switch (platform) {\r\n    case \"facebook\":\r\n      return getFacebookUserData(access_token, params);\r\n    case \"google\":\r\n      return getGoogleUserData(access_token);\r\n    case \"github\":\r\n      return getGitHubUserData(access_token);\r\n    case \"linkedin\":\r\n      return getLinkedinUserData(access_token);\r\n    default:\r\n      throw \"Platform value not supported\";\r\n  }\r\n}\r\n\r\nexport default getUserData;\r\n"],"names":["facebook_options","client_id","redirect_uri","scope","response_type","google_options","access_type","prompt","github_option","allow_signup","linked_in_option","getOauthUrl","platform","options","toLowerCase","facebook_oauth_url","queryString","stringify","getFacebookOauthUrl","google_oauth_url","getGoogleOauthUrl","github_oauth_url","getGithubOauthUrl","linked_in_oauth_url","getLinkedInOauthUrl","getClientSideOauthOption","parseUrl","url","parse","getAccessToken","params","axios","method","getFacebookAccessToken","data","grant_type","getGoogleAccessToken","getGithubAccessToken","getLinkedinAccessToken","getUserInfo","access_token","fields","getFacebookUserData","headers","Authorization","getGoogleUserData","getGitHubUserData","getLinkedinUserData"],"mappings":"oZAAA,IAAMA,EAAmB,CACvBC,UAAW,iBACXC,aAAc,oBACdC,MAAO,QACPC,cAAe,QAGXC,EAAiB,CACrBJ,UAAW,iBACXC,aAAc,oBACdC,MAAO,kGACPC,cAAe,OACfE,YAAa,UACbC,OAAQ,WAGJC,EAAgB,CACpBP,UAAW,iBACXC,aAAc,oBACdC,MAAO,uBACPM,cAAc,GAGVC,EAAmB,CACvBT,UAAW,iBACXC,aAAc,oBACdC,MAAO,+CACPC,cAAe,6NCrBI,CAAEO,YCJvB,SAAqBC,EAAUC,GAG7B,OAFwB,iBAAbD,IAAuBA,EAAW,WAC7CA,EAAWA,EAASE,eAElB,IAAK,WACH,OCIN,SAA6BD,GAE3B,MAAUE,yCADgBC,EAAYC,UAAUJ,GDLrCK,CAAoBL,GAC7B,IAAK,SACH,OCHN,SAA2BA,GAEzB,MAAUM,gDADgBH,EAAYC,UAAUJ,GDErCO,CAAkBP,GAC3B,IAAK,SACH,OCKN,SAA2BA,GAEzB,MAAUQ,4CADgBL,EAAYC,UAAUJ,GDNrCS,CAAkBT,GAC3B,IAAK,WACH,OCQN,SAA6BA,GAE3B,MAAUU,mDADgBP,EAAYC,UAAUJ,GDTrCW,CAAoBX,GAC7B,QACE,MAAO,wBDTuBY,yBGJpC,SAAkCb,GAChC,GAAwB,iBAAbA,EAAuB,OAAOZ,EAEzC,OADAY,EAAWA,EAASE,eAElB,IAAK,WACH,OAAOd,EACT,IAAK,SACH,OAAOK,EACT,IAAK,SACH,OAAOG,EACT,IAAK,WACH,OAAOE,EACT,QACE,OAAOV,IHTiD0B,SIJ9D,SAAkBC,GAEhB,OADoBX,EAAYY,MAAMD,IJGgCE,eK4BxE,SAAwBjB,EAAUkB,GAChC,GAAwB,iBAAblB,EAAuB,KAAM,4BAExC,OADAA,EAAWA,EAASE,eAElB,IAAK,WACH,OArCN,SAAgCgB,GAC9B,OAAOC,EAAM,CACXJ,IAAK,gDACLK,OAAQ,MACRF,OAAAA,IAiCSG,CAAuBH,GAChC,IAAK,SACH,OA/BN,SAA8BA,GAC5B,OAAOC,EAAM,CACXJ,0CACAK,OAAQ,OACRE,QAAQC,WAAY,sBAAyBL,KA2BpCM,CAAqBN,GAC9B,IAAK,SACH,OAjBN,SAA8BA,GAC5B,OAAOC,EAAM,CACXJ,IAAK,8CACLK,OAAQ,MACRF,OAAAA,IAaSO,CAAqBP,GAC9B,IAAK,WACH,OA3BN,SAAgCA,GAC9B,OAAOC,EAAM,CACXJ,oDACAK,OAAQ,OACRE,QAAQC,WAAY,sBAAyBL,KAuBpCQ,CAAuBR,GAChC,QACE,KAAM,iCLzC4ES,YMqCxF,SAAqB3B,EAAU4B,EAAcV,GAC3C,YAD2CA,IAAAA,GAAS,GAC5B,iBAAblB,EAAuB,KAAM,4BAExC,OADAA,EAAWA,EAASE,eAElB,IAAK,WACH,OApCN,SAA6B0B,EAAcC,GACzC,OAAOV,EAAM,CACXJ,IAAK,gCACLK,OAAQ,MACRF,OAAQ,CACNW,OAAQA,GAAkB,gCAC1BD,aAAAA,KA8BOE,CAAoBF,EAAcV,GAC3C,IAAK,SACH,OA3BN,SAA2BU,GACzB,OAAOT,EAAM,CACXJ,IAAK,gDACLK,OAAQ,MACRW,QAAS,CACPC,cAAe,UAAYJ,KAsBpBK,CAAkBL,GAC3B,IAAK,SACH,OAlDN,SAA2BA,GACzB,OAAOT,EAAM,CACXJ,IAAK,8BACLK,OAAQ,MACRW,QAAS,CACPC,cAAe,SAAWJ,KA6CnBM,CAAkBN,GAC3B,IAAK,WACH,OArBN,SAA6BA,GAC3B,OAAOT,EAAM,CACXJ,IAAK,iCACLK,OAAQ,MACRW,QAAS,CACPC,cAAe,UAAYJ,KAgBpBO,CAAoBP,GAC7B,QACE,KAAM"}